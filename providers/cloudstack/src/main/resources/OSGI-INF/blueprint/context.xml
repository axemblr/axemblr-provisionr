<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 S.C. Axemblr Software Solutions S.R.L
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:shell="http://karaf.apache.org/xmlns/shell/v1.0.0"
           xmlns:cfg="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">

    <cfg:property-placeholder persistent-id="com.axemblr.provisionr.cloudstack"
                              placeholder-prefix="$(" placeholder-suffix=")" update-strategy="reload">
        <cfg:default-properties>
            <cfg:property name="endpoint" value=""/>
            <cfg:property name="accessKey" value=""/>
            <cfg:property name="secretKey" value=""/>
            <cfg:property name="zoneId" value="1"/>
            <cfg:property name="templateId" value="1"/>
            <cfg:property name="serviceOffering" value="1"/>
        </cfg:default-properties>
    </cfg:property-placeholder>

    <!-- Configure a DefaultProviderConfiguration via ConfigAdmin
        WARNING: Order of arguments is important.
    -->
    <bean id="defaultProviderConfig" class="com.axemblr.provisionr.cloudstack.DefaultProviderConfig">
        <argument value="$(endpoint)"/>
        <argument value="$(accessKey)"/>
        <argument value="$(secretKey)"/>
        <argument value="$(zoneId)"/>
        <argument value="$(templateId)"/>
        <argument value="$(serviceOffering)"/>
    </bean>

    <reference id="processEngine" interface="org.activiti.engine.ProcessEngine"/>

    <bean id="cloudstackService" class="com.axemblr.provisionr.cloudstack.CloudStackProvisionr">
        <argument ref="processEngine"/>
        <argument ref="defaultProviderConfig"/>
    </bean>

    <service ref="cloudstackService" interface="com.axemblr.provisionr.api.Provisionr"/>

    <bean id="cloudstack_ensureSecurityGroupExists"
          class="com.axemblr.provisionr.cloudstack.activities.EnsureSecurityGroupExists"/>
    <service ref="cloudstack_ensureSecurityGroupExists"
             auto-export="interfaces"/>

    <bean id="cloudstack_deleteSecurityGroup"
          class="com.axemblr.provisionr.cloudstack.activities.DeleteSecurityGroup"/>
    <service ref="cloudstack_deleteSecurityGroup" auto-export="interfaces">
    </service>
    <bean id="cloudstack_ensureKeyPairExists"
          class="com.axemblr.provisionr.cloudstack.activities.EnsureKeyPairExists"/>
    <service ref="cloudstack_ensureKeyPairExists" auto-export="interfaces">
    </service>

    <bean id="cloudstack_deleteKeyPair"
          class="com.axemblr.provisionr.cloudstack.activities.DeleteKeyPair"/>
    <service ref="cloudstack_deleteKeyPair" auto-export="interfaces">
    </service>

    <!-- CloudStack Karaf shell commands for discovery -->
    <shell:command-bundle>
        <shell:command name="cloudstack/zones">
            <shell:action class="com.axemblr.provisionr.cloudstack.commands.ZonesCommand">
                <shell:argument ref="defaultProviderConfig"/>
            </shell:action>
        </shell:command>
        <shell:command name="cloudstack/templates">
            <shell:action class="com.axemblr.provisionr.cloudstack.commands.TemplatesCommand">
                <shell:argument ref="defaultProviderConfig"/>
            </shell:action>
        </shell:command>
        <shell:command name="cloudstack/offerings">
            <shell:action class="com.axemblr.provisionr.cloudstack.commands.OfferingsCommand">
                <shell:argument ref="defaultProviderConfig"/>
            </shell:action>
        </shell:command>
    </shell:command-bundle>
</blueprint>