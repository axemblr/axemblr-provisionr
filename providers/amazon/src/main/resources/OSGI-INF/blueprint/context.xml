<!--
  ~ Copyright (c) 2012 S.C. Axemblr Software Solutions S.R.L
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns:cfg="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">

    <cfg:property-placeholder persistent-id="com.axemblr.provisionr.amazon"
                              placeholder-prefix="$(" placeholder-suffix=")" update-strategy="reload">
        <cfg:default-properties>
            <cfg:property name="accessKey" value=""/>
            <cfg:property name="secretKey" value=""/>
            <cfg:property name="region" value="us-east-1"/>
            <cfg:property name="endpoint" value=""/>
        </cfg:default-properties>
    </cfg:property-placeholder>

    <bean id="defaultProviderConfig" class="com.axemblr.provisionr.amazon.config.DefaultProviderConfig">
        <argument value="$(accessKey)"/>
        <argument value="$(secretKey)"/>
        <argument value="$(region)"/>
        <argument value="$(endpoint)"/>
    </bean>

    <reference id="processEngine" interface="org.activiti.engine.ProcessEngine"/>
    <reference id="runtimeService" interface="org.activiti.engine.RuntimeService"/>

    <bean id="amazonService" class="com.axemblr.provisionr.amazon.AmazonProvisionr">
        <argument ref="processEngine"/>
        <argument ref="defaultProviderConfig"/>
    </bean>
    <service ref="amazonService" interface="com.axemblr.provisionr.api.Provisionr"/>

    <!-- Initialize the cache for AmazonEC2 client instances -->

    <bean id="cacheSupplier" class="com.axemblr.provisionr.amazon.core.ProviderClientCacheSupplier"/>
    <bean id="providerClientCache" factory-ref="cacheSupplier" factory-method="get"/>

    <!-- Process activities that are specific to Amazon -->

    <bean id="amazon_ensureSecurityGroupExists"
          class="com.axemblr.provisionr.amazon.activities.EnsureSecurityGroupExists">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_ensureSecurityGroupExists" auto-export="interfaces"/>

    <bean id="amazon_deleteSecurityGroup"
          class="com.axemblr.provisionr.amazon.activities.DeleteSecurityGroup">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_deleteSecurityGroup" auto-export="interfaces"/>

    <bean id="amazon_ensureKeyPairExists"
          class="com.axemblr.provisionr.amazon.activities.EnsureKeyPairExists">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_ensureKeyPairExists" auto-export="interfaces"/>

    <bean id="amazon_deleteKeyPair"
          class="com.axemblr.provisionr.amazon.activities.DeleteKeyPair">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_deleteKeyPair" auto-export="interfaces"/>

    <bean id="amazon_runOnDemandInstances"
          class="com.axemblr.provisionr.amazon.activities.RunOnDemandInstances">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_runOnDemandInstances" auto-export="interfaces"/>

    <bean id="amazon_terminateInstances"
          class="com.axemblr.provisionr.amazon.activities.TerminateInstances">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_terminateInstances" auto-export="interfaces"/>

    <bean id="amazon_checkAllInstancesAreRunning"
          class="com.axemblr.provisionr.amazon.activities.CheckAllInstancesAreRunning">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_checkAllInstancesAreRunning" auto-export="interfaces"/>

    <bean id="amazon_checkAllInstancesAreTerminated"
          class="com.axemblr.provisionr.amazon.activities.CheckAllInstancesAreTerminated">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_checkAllInstancesAreTerminated" auto-export="interfaces"/>

    <bean id="amazon_publishListOfMachines"
          class="com.axemblr.provisionr.amazon.activities.PublishListOfMachines">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_publishListOfMachines" auto-export="interfaces"/>

    <bean id="amazon_spawnMachineSetupProcesses"
          class="com.axemblr.provisionr.core.activities.SpawnProcessForEachMachine">
        <argument ref="processEngine"/>
        <argument value="amazonMachineSetup"/>
        <argument value="setup"/>
        <argument value="amazonMachineSetupProcessIds"/>
    </bean>
    <service ref="amazon_spawnMachineSetupProcesses" auto-export="interfaces"/>

    <bean id="amazon_checkSetupProcessesEnded"
          class="com.axemblr.provisionr.core.activities.CheckProcessesEnded">
        <argument ref="runtimeService"/>
        <argument value="amazonMachineSetupProcessIds"/>
        <argument value="setupProcessesEnded"/>
    </bean>
    <service ref="amazon_checkSetupProcessesEnded" auto-export="interfaces"/>

    <bean id="amazon_setupAdminAccess"
          class="com.axemblr.provisionr.amazon.activities.SetupAdminAccess"/>
    <service ref="amazon_setupAdminAccess" auto-export="interfaces"/>

    <bean id="amazon_dumpConsoleOutput"
          class="com.axemblr.provisionr.amazon.activities.DumpConsoleOutput">
        <argument ref="providerClientCache"/>
    </bean>
    <service ref="amazon_dumpConsoleOutput" auto-export="interfaces"/>

</blueprint>                     